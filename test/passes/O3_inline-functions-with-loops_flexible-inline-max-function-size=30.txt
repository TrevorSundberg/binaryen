precomp
precomp
precomp
precomp
((((local.get local.get local.get local.get $0)
  p1
$0)
  p1
precomp
(local.get $0)
  p1
  p2
  p2
  p2
  p3
$precomp
precomp
  p3
($0)
  p1
precomp
(0(  p2
  p3
precomp
)local.get (
  p1
i32.const i32.const i32.const $0)
  p1
  p2
  p2
  p3
precomp
  p3
precomp
((call i32.const   p3
$1looped
precomp
2 )()
precomp
(10
(precomp
local.get $(call $fib
i32.le_s0))
i32.add
 (
 )
precomp
(local.get  i32.add
()local.get 
$(0local.get )
precomp
  p1
 ($i32.ge_s
 (local.get (local.get $$0)
 (  p2
i32  p3
.const 
10) (i32.const 1))
)
  p1

)
  p1

0   p2
  p3
precomp
(call )$looped  p2

 ($  p3
precomp
(call 
0)
)
   p1
$fib
  p2
  p3
( i32.add
  (local.get i32.const $(i32.add20)
  (i32
)
)
  p1
(.const    p2
 (i32local.get 1)
 )
)
  p3
.const $0)
  (i32.const 0precomp
  p1
1)
 )
)
)  p1
  p2
  p2
(  p3

)
  p1
  p2
local.get $0)
  p1
  p3
  p2
  p3
  p3
precomp
(return
 (local.get $0)
)
  p1
precomp
(local.get $0)
  p1
  p2
  p3
  p2
  p3
precomp
precomp
(i32.const 1)
precomp
(i32.sub
 (local.get ($block0
) (return
  (local.get $0)
 )
)
 (
i32.const 1)
)
  p1
  p2
  p3
  p1
precomp
(local.set $0
 (i32.sub
  (local.get $0)
  (i32.const   p2
1)
 )
)
  p1
  p2
  p3
  p3
precomp
(br $L0)
  p1
precomp
  p2
  p3
  p4 (()
if
 (i32.le_s
  (local.get $0)
  (i32.const precomp
2)
 )
(block
 (local.set  $(0
  (i32.sub
  return
   (local.get $0)
 )
)
  p1
(local.get $0  p2
)
   (i32.const 1)  p3

precomp
(local.get $0) 
   p1
)
 )
  p2
 (br $L0)
)
  p1
  p3
precomp
(i32.const   p2
  p3
1precomp
)(if
 (i32.ge_s
precomp

(  (local.get $0)
  i32.sub
 ((local.get $0)
 (i32.const 1i32)
)
  p1
  p2
  p3
.const precomp
0)
 )
 (block
  (local.set $(call 0$
 fib  (i32.sub
    (local.get $0)

    (i32.const 1)
    )
  )
  (br ($L0)
 )
)
  p1
i32.sub
  (local.get $  p2
0  p3
precomp
(block
 (if)
  (i32.ge_s
   (local.get 
$  0(i32.const 1)
 )
)
)  p1

  p2
  p3
precomp
  ( local.get $0)
  p1
  p2
(  p3
i32.const 0)
  )
  (precomp
block(i32.const 2)
precomp

   ((i32.sub
 (local.get local.set $$0
    (i32.sub
   0 )
 (i32.const 2)
)
 (  p1
local.get $0)
  p2
     (i32.const 1)  p3

precomp
    )
 ( call $fib
 (i32.sub
  (local.get  )precomp
$precomp

(local.get 0)
 $   (precomp
br $L0)
  ) (0local.get (
(i32.const 2))
local.get   
  p1
$)precomp
0)
  p1
$
(  p2
))  p3
local.get 
)

precomp
$0)
  p1
  p1
  p1
  p2
  p2
  p3
0)
  p3
  p2
(precomp
(i32precomp
  p1
  p2
  p3
i32  p3
precomp
.const (loop $L0
(precomp
(call i32.add1$looped
 (
local.get   $)
precomp
((i32.add0)
)
  p1
(  p2
  p3
if
.const call $fib
  (
 i32.sub(  (i32.ge_s
  local.get $0)
 (i32.const 1 (local.get $0)

)
)
  p1
   (local.get  $  p2
0  p3
1 ) (
i32precomp
)
   (i32  p2
.const (i32.add
 precomp
.const (  p3
0)
  )local.get precomp

  (block
   ((local.set (call $call $0
    (i32.sub
  $   (local.get $0$)0loopedfib
 (local.get $0
1)
)
 ))
  p1
 
((
     (i32.const  1i32.add) 
i32)
    )
  
 )
 (call $fib
  (i32.sub
   (local.get    p2
  )$
   ((0)
   (i32.const .const 2)
  )
 )
)  p3
local.get $0)
  (i321)
)
  p1
br .const 1)
 )
)
  p1
  p2
$L0  p2
  p3

  p3
)
  )
 precomp
  p1
)  p2
  p3
precomp
((block (result i32)
 
(call $fib
 ()i32.addif


  (i32.le_s
   (local.get $0)
   (i32.const 2)  p1
 
 ( local.get  $0)
  (i32.const )1
  p2
  p3
)precomp
  (return
   (local.get $0)(
  )
 )
 (i32.add
  (call $fib
   (i32.sub
    (
local.get  )$0)
    local.get 
(i32).const $1)
   )
  )
  (call $fib
   (i32.sub
 0 
  (local.get $0)
    (i32.const 2)
   )
 )  p1
  p2
  p3
 
  p1
  p2
  p3
)precomp

( )
)
  p1
block  p2
  p3
 (result i32)
 (loop $L0
  (if
   (i32.ge_s
    (local.get $0)
    (i32.const 0)
   )
   (block
    (local.set $0
     (i32.sub
      (local.get $0)
      (i32.const 1)
     )
    )
    (br $L0)
   )
  )
 )
 (local.get $0)
)
  p1
  p2
  p3
precomp
(local.get $0)
  p1
  p2
  p3
precomp
(i32.const 2)
precomp
(i32.le_s
 (local.get $0)
 (i32.const 2)
)
  p1
  p2
  p3
precomp
(local.get $0)
  p1
  p2
  p3
precomp
(return
 (local.get $0)
)
  p1
  p2
  p3
precomp
(if
 (i32.le_s
  (local.get $0)
  (i32.const 2)
 )
 (return
  (local.get $0)
 )
)
  p1
  p2
  p3
precomp
(local.get $0)
  p1
  p2
  p3
precomp
(i32.const 1)
precomp
(i32.sub
 (local.get $0)
 (i32.const 1)
)
  p1
  p2
  p3
precomp
(call $fib
 (i32.sub
  (local.get $0)
  (i32.const 1)
 )
)
  p1
  p2
  p3
precomp
(local.get $0)
  p1
  p2
  p3
precomp
(i32.const 2)
precomp
(i32.sub
 (local.get $0)
 (i32.const 2)
)
  p1
  p2
  p3
precomp
(call $fib
 (i32.sub
  (local.get $0)
  (i32.const 2)
 )
)
  p1
  p2
  p3
precomp
(i32.add
 (call $fib
  (i32.sub
   (local.get $0)
   (i32.const 1)
  )
 )
 (call $fib
  (i32.sub
   (local.get $0)
   (i32.const 2)
  )
 )
)
  p1
  p2
  p3
precomp
(block (result i32)
 (if
  (i32.le_s
   (local.get $0)
   (i32.const 2)
  )
  (return
   (local.get $0)
  )
 )
 (i32.add
  (call $fib
   (i32.sub
    (local.get $0)
    (i32.const 1)
   )
  )
  (call $fib
   (i32.sub
    (local.get $0)
    (i32.const 2)
   )
  )
 )
)
  p1
  p2
  p3
precomp
(local.get $0)
  p1
  p2
  p3
precomp
(i32.const 0)
precomp
(i32.ge_s
 (local.get $0)
 (i32.const 0)
)
  p1
  p2
  p3
precomp
(local.get $0)
  p1
  p2
  p3
precomp
(i32.const 1)
precomp
(i32.sub
 (local.get $0)
 (i32.const 1)
)
  p1
  p2
  p3
precomp
(local.set $0
 (i32.sub
  (local.get $0)
  (i32.const 1)
 )
)
  p1
  p2
  p3
precomp
(br $L0)
  p1
  p2
  p3
  p4 ()
precomp
(block
 (local.set $0
  (i32.sub
   (local.get $0)
   (i32.const 1)
  )
 )
 (br $L0)
)
  p1
  p2
  p3
precomp
(if
 (i32.ge_s
  (local.get $0)
  (i32.const 0)
 )
 (block
  (local.set $0
   (i32.sub
    (local.get $0)
    (i32.const 1)
   )
  )
  (br $L0)
 )
)
  p1
  p2
  p3
precomp
(loop $L0
 (if
  (i32.ge_s
   (local.get $0)
   (i32.const 0)
  )
  (block
   (local.set $0
    (i32.sub
     (local.get $0)
     (i32.const 1)
    )
   )
   (br $L0)
  )
 )
)
  p1
  p2
  p3
precomp
(local.get $0)
  p1
  p2
  p3
precomp
(block (result i32)
 (loop $L0
  (if
   (i32.ge_s
    (local.get $0)
    (i32.const 0)
   )
   (block
    (local.set $0
     (i32.sub
      (local.get $0)
      (i32.const 1)
     )
    )
    (br $L0)
   )
  )
 )
 (local.get $0)
)
  p1
  p2
  p3
precomp
precomp
(local.get (local.get $0)
  p1
$  p2
0  p3
)
precomp
  p1
(local.set $1
  p2
  p3
 (local.get precomp
$0)
()
  p1
i32.const   p2
  p3
precomp
1()local.get 
$1)
  p1
  p2
  p3
precomp
precomp
((i32.const i32.add
 (0local.get )
$precomp
0)
 ((i32.const 1)
)
  p1
i32.ge_s
   p2
(  p3
precomp
(local.set local.get $$1
 (i32.add
  (local.get 1$)0
) 
(  i32(i32.const 1)
 )
).const 
0)
)
  p1
  p1
  p2
  p3
  p2
precomp
  p3
(local.get precomp
$1)
  p1
  p2
  p3
precomp
(local.get ($1)
  p1
  p2
  p3
precomp
i32(i32.const 0)
.const precomp
(i32.ge_s
 (local.get 1$1)
 )(i32.const 0)
)
  p1

precomp
  p2
  p3
(precomp
(local.get i32.sub
$1)
  p1
   p2
  p3
precomp
(i32(.const local.get 1$)
precomp
(i32.sub
 1()local.get 
 $1)(
 (i32.const 1)
i32)
.const   p1
1)
)
  p1
  p2
  p3
precomp
  p2
  p3
precomp
(local.set ($local.set 1
 $(1
 (i32.sub
  (local.get $1i32.sub
  )
(  local.get ($1)
  (i32.const i321)
 )
)
  p1
.const   p2
  p3
1)precomp

 )
)
  p1
(  p2
  p3
precomp
(br br $L0$)
  p1
  p2
  p3
  p4 L0)
(  p1
)  p2
  p3
  p4 ()

precomp
precomp
((block
 (local.set $1
  block(
 (local.set $1
  (i32.subi32.sub

      ((local.get local.get $1)
   (i32.const 1$1))
  )
 )
 (br 
$  L0 )
)
  p1
(i32.const   p2
  p3
1)
precomp
  )
 ()if
 (i32.ge_s
  (local.get 
$ 1(br $L0)
)
  p1
)
  (i32.const   p2
  p3
precomp
0(if
 (i32.ge_s)

  ( )local.get 
$ 1)
 ( (blocki32.const 0)
 )
 
 ( block(
local.set   $(local.set $1
   (i32.sub1

    (i32.sub
    (local.get   $ (local.get $1)
    (i321.const )
  1 )
    )
  )
  (br $(L0i32).const 
1)
   )
  )
 ) 
)
  p1
 (br   p2
$  p3
L0precomp
)
 )
)
(  p1
loop  p2
  p3
precomp
 $L0
 ((if
  (i32.ge_s
   (local.get loop $$1L0
) (if
  (i32.ge_s
   
( local.get   $(1i32.const 0)
  )
)
    (i32.const 0)
   )(block
   (local.set $1
 
   (i32.sub
     ( local.get  $1()
     (i32.const 1block
   )(local.set $1
    (
i32.sub 
     (local.get $1)
        )(
   )
   (br $L0)i32
  )
 )
)
  p1
.const 1)
    )
    p2
   p3
)
   (precomp
br $L0)
  )
 )
)
  p1
(local.get $1)
  p1
  p2
  p3
precomp
(block (result i32)
 (loop $L0
  (if
   (i32.ge_s
   p2
   p3
precomp
  (local.get $(1)
    (i32.const local.get 0$)1
)   )
   (block

    (local.set $1
   p1
    (i32.sub
    p2
   p3
 precomp
(block (result   i32()
 (loop $L0
local.get  $1)
      (i32.const  1)
     )
 (if 
   (i32.ge_s
    ( local.get  $1)
    (i32.const )
0 )
   )
   (block 
     ( br $L0)
   )
  ()local.set 
 $)
 (local.get $1)
)1
  p1

     (i32.sub
       p2
   p3
precomp
((blocklocal.get $1)
      (i32 .const $__inlined_func$looped (result i32)
 (local.set $11)
     )
    )

    (local.get $0)
 )
   (block ((result i32)
  (loop $L0
 br  $L0)
   )
  )
  (if
    (i32.ge_s
 ) 
 (local.get $1)
)
  p1
   (local.get $1)
     (  p2
i32  p3
.const precomp
(block $__inlined_func$looped 0(result )i32
) 
 (local.set $1
  ( i32.add
   (local.get $0)
     )
( i32.const  1)
  )
 )
   ((block
     (local.set block$ 1(result 
i32)
  (loop $L0
     (if
     (i32.ge_s
     ( local.get   ($i32.sub1
) 
      (i32.const 0)
         ()local.get 
  $1)  
(block
     (local.set $ 1  
       (i32.sub
       ( i32.const 1)
        ()local.get 
$1)
       (i32     ).const 
 1    (br $L0)
   ) 
 ) 
      )
  )
  )
  (local.get $1 )
 )
)
  p1
   )
  p2
   p3
precomp
(block  (result  i32)
   (br $L0)
    )
   )
 ( )
block $__inlined_func$looped   (local.get (result $1)
 )
)
  p1
i32)
  (local.set   p2
$1
   (local.get $0)  p3

 precomp
 (block (result i32)
) (block $__inlined_func$looped (result i32
) 
  (block (result i32)
   ( loop ($L0
    (if
     local.set ($i32.ge_s1

   (i32.add
    (local.get   $ 0 )
    (i32.const   1()local.get 
  $ 1))
   
   (i32.const 0 ) )
 
   (block (result i32)
   ( loop $ L0
    (if
      ()
i32.ge_s     (block
     
       (local.get $1)
  ( local.set  $1
       (i32.sub 
  ( i32.const 0)
     ) 
     (local.get $1)
         (i32.const 1  )
        )
       (block
      (local.set )
  $1  
   (br $L0)
     )
     )
   )
   (local.get    $ 1) 
(i32.sub
        (local.get   $)
 )
)
  p1
1)
       p2
   p3
  (i32.const 1)
       )
      )
      (br $L0)
     )
    )
   )
   (local.get $1)
  )
 )
)
  p1
  p2
  p3
precomp
precomp
(local.get ($local.get 0)
  p1
$0)
  p1
  p2
  p2
  p3
  p3
precomp
(local.set $1
precomp
 (local.get ($i32.const 01))
precomp
(i32.add

) 
(local.get $0)
 (i32  p1
.const   p2
  p3
precomp
1()local.get 
)$
  p1
1  p2
  p3
precomp
)
  p1
(local.set   p2
$  p3
1precomp
(i32.const 
 (0i32.add)

precomp
(i32.ge_s
 (local.get   $(1local.get $0)
  (i32.const )
1 )(
i32 ).const 
0)
)
  p1
)
  p1
  p2
  p2
  p3
  p3
precomp
precomp
(local.get $1()
local.get   p1
$1)
  p1
  p2
  p3
precomp
  p2
  p3
(precomp
i32.const 1()i32.const 
0)
precomp
(i32.ge_sprecomp

(i32.sub
 (local.get  $(local.get 1$1)
 (i32.const 0))
 
()
  p1
  p2
  p3
i32.const 1precomp
)
)
  p1
(local.get $1)
  p2
  p1
  p3
precomp
  p2
  p3
(precomp
local.set $1
( i32.const (i32.sub
1  )
precomp
((i32.sub
 (local.get $local.get 1)
$ (i32.const 1)
)1)
  p1

  p2
  p3
precomp
  ((i32.const local.set 1)
 )
)
  p1
$1  p2

  p3
precomp
(br  $L0)
  p1
  p2
  p3
  p4 (i32.sub
( )
 precomp
(local.get $1)
( block 
(i32.const 1)
 )
)
   p1
(local.set $1
  (i32.sub
     p2
(  p3
local.get $precomp
1(br $L0)
  p1
)
    p2
   p3
(i32  p4 .const ()
1)
  )precomp

(block
 (local.set  $1
  (i32.sub
   )(
 local.get ($br 1$L0))

 )
  p1
  (i32  p2
.const   p3
precomp
1)
 ( if)

 ( i32.ge_s
  (local.get $1))

  (i32.const 0)
  )(br $L0)
)
  p1

 (block
  p2
  (local.set $1
     p3
(i32.sub
    (local.get $1)precomp

    ((ifi32.const 
1)
   )
  )
   (i32.ge_s
  (local.get $1)
 ( br $L0)
 )
)
  p1
(i32.const 0)
  p2
 )  p3

precomp
(loop  $L0
( block
  (local.set $1
   ((i32.sub
    (local.get $1)
if 
   (i32.ge_s
   (local.get $1 ) 
(i32.const 1)
   )
     (i32.const 0)
  )
 ) (block
   (local.set $1

     ( br ($L0)
 )
)
  p1
i32.sub
     (local.get   p2
  p3
$1precomp
)(loop $L0
 
(if
  (i32.ge_s
   (local.get    $  (i32.const 1)
   1 )
   )
   (br $)L0)
 
   ) 
 ()i32
.const )
  p1
0)  p2

  )
  (block
     p3
(precomp
(local.get $local.set 1)
$  p1
1
      p2
  p3
(precomp
(block (result i32)
 (loop $L0
  (if
   (i32.ge_s
    (local.get i32.sub$1)
    (i32.const 
0  )   
  ( local.get $1)
     ()i32
   (block
    .const (1)
    )
  local.set  $1
     (i32.sub
)  
      (br  $L0)
  )
 )(
local.get )
  p1
$1)
  p2
      (i32.const 1  p3
)precomp
(
  local.get  $1)
  p1
  p2
  p3
precomp
  )
    )
(    (br $L0)
 block  (result i32)
 (loop $ L0
)  (if
   (i32.ge_s
   
   )
 )
 (local.get $(1local.get $1)
    (i32.const )
)0
  p1
)
   )  p2

  p3
   precomp
(block
  ( block (result i32)
 (local.set $ 1(
local.set   (local.get $$0)
 )
 (block 1(result 
i32)
  (loop $L0 
     ( if
    (i32.ge_s
      (i32.sub
      (local.get ($1local.get )$1)
     (i32.const 
  0 )
    )
    (block 
   ( i32 .const  1)
     )
     ()local.set 
    $1(
  br  $L0)
   )
   ) 
 (i32.sub
       ( local.get )
 $(local.get $1)
)
  p1
1)
       (i32.const   p2
  p3
1)precomp

(block (result    i32)
    )(
     )
     (br local.set $L0$)1
    )
   )
  
) 
  ( i32.add
   (local.get $0)
   ((i32.const 1)
  )
local.get  $1)
 )
)
  p1
)
 (block  p2
   p3
(result precomp
i32(block (result i32)
) 
  ((block (result i32)
  (local.set $1loop
  $ L0
  ( local.get $0)
  )
   ((blockif
     (i32.ge_s
     (local.get (result i32$)
   (loop $L0
   1 )(if
     (i32.ge_s
    
   (  local.get  $1)
      (i32.const  (i320.const )
 0 )
    )
    (   )
block
         (block
      (local.set  $(1local.set 
 $ 1
      (i32.sub
          (i32.sub
        (local.get   $(local.get $1)
       1(i32.const 1)
      ))

            )
      (br $L0)
    ()i32.const 
  1)
 ) 
  )
  (local.get $1)  
    )
      )
    ) 
)
  p1
  p2
   p3
 precomp
(block (result i32()
br  (block (result i32)
  (local.set $$L01
   (i32.add
   ) (local.get 
$0)
    (i32.const  1  ) 
    ))

    )
   (block (result i32)
    ()loop $L0
    (if
  
   (i32.ge_s
      ( local.get  $1)
       ()
 i32 .const  0()
     )
     local.get (block$
1  ) 
   )
 )
)
  p1
  (local.set $1
  p2
       (i32.sub
      p3
    (local.get $1)
        (i32.const 1)
       )
      )
      (br $L0)
     )
    )
   )
   (local.get $1)
  )
 )
)
  p1
  p2
  p3
precomp
(local.get $0)
  p1
  p2
  p3
precomp
(i32.const 0)
precomp
(i32.ge_s
 (local.get $0)
 (i32.const 0precomp
)
)
  p1
(local.get   p2
  p3
$0)
precomp
  p1
(local.get $0)
  p1
  p2
  p3
precomp
(i32.const 1)
precomp
  p2
(  p3
i32.sub
 (local.get $0precomp
)(i32.const 1
)
precomp
(i32.add
  ((local.get i32.const $0)
1 (i32.const 1)
)
  p1
)
)
  p1
  p2
  p3
  p2
precomp
  p3
(local.set $0
 precomp
(i32.add
  (local.get $0)
  (i32.const (1)
 )
)
  p1
  p2
local.set   p3
$0
 (i32.sub
  (local.get $0)precomp

  (i32.const 1)
 )
)
  p1
(local.get   p2
  p3
$0)
  p1
precomp
  p2
  p3
precomp
(i32.const (0br )$L0)
  p1
  p2
  p3
  p4 
()
precomp
precomp
(i32.ge_s
 ((local.get block
$ (local.set $0
  (i32.sub0
) 
 (  i32.const (0)
)
  p1
local.get   p2
$0  p3
)precomp
(local.get 
$   (i32.const 1)
 0) )

 )
 (br $L0)
)  p1

  p1
  p2
  p3
precomp
  p2
(  p3
i32precomp
(if
 .const (i32.ge_s
  (local.get $0)
  1()
precomp
(i32.sub
 (i32local.get .const $0)
 (i32.const 1)
0))
 )
 (block
 
   p1
(local.set $0
   p2
  p3
 precomp
(local.set $0 
 ((i32.sub
  (local.get $0)
 i32.sub 
    (local.get $0)
( i32.const  1)
 )
)
  p1
  p2
    p3
(i32.const 1)
   )
  precomp
)
  ((br br $L0)
  p1
  p2
  p3
  p4 $L0())
 )
)
  p1

  p2
precomp
  p3
(block
 (local.set precomp
$0
  ((i32.sub
   (local.get $0)
 loop  $L0
 (if
  (i32.ge_s
    (local.get $0)
   ((i32.const 0)
  )
  i32.const (block1
)
  )
 )
 (br $L0 )  
()local.set $0
    (i32.sub
  
   p1
  (local.get $0)  p2

  p3
 precomp
 (if
 (i32.ge_s 
  (i32.const 1)
      ()local.get 
$0)
  (i32.const   0 ))

  )  (br $L0)
  )

 (block
  (local.set $ 0)

)
  p1
   (i32.sub
  p2
   p3
   precomp
(local.get $0)
    (i32.const 1()local.get $0)
  p1
  p2
  p3

 precomp
  )
  )(
block (result i32)
 ( loop  $L0
  (if
   ((i32.ge_s
br  $L0)
 )
)
  p1
   (local.get   p2
$  p3
0)
 precomp
 (loop $ L0 
(i32.const 0)
    )(if
  (i32.ge_s
   (local.get 
  $0) 
(block
    (local.set $0  
    (  i32(i32.sub
      (local.get .const 0)
  )
  (block
   (local.set $0
   $ 0)
      ((i32.const i32.sub
     1()local.get 
$0)
     (i32.const      1)
)
     )
   )
    ( br $L0 ))
    (br $L0)
 
    ))

 )
)
  p1
  )
 )
 (  p2
  p3
local.get precomp
(local.get $$0)0
)
  p1
)
  p1
  p2
  p3
precomp
  p2
  p3
(block (result i32)
 (local.set $0
  (i32.add
   (local.get $0)
   (i32.const 1)
  )
 )
 (loop $L0
  (if
   (i32.ge_s
    (local.get $0)
    (i32.const 0)
   )
   (block
    (local.set $0
     (i32.sub
      (local.get $0)
      (i32.const 1)
     )
    )
    (br $L0)
   )
  )
 )
 (local.get $0)
)
  p1
  p2
  p3
(module
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (memory $memory 0)
 (export "fib" (func $fib))
 (export "looped" (func $looped))
 (export "t0" (func $looped))
 (export "t1" (func $t1))
 (export "t2" (func $t2))
 (export "t3" (func $t3))
 (export "memory" (memory $memory))
 (func $fib (; has Stack IR ;) (param $0 i32) (result i32)
  (if
   (i32.le_s
    (local.get $0)
    (i32.const 2)
   )
   (return
    (local.get $0)
   )
  )
  (i32.add
   (call $fib
    (i32.sub
     (local.get $0)
     (i32.const 1)
    )
   )
   (call $fib
    (i32.sub
     (local.get $0)
     (i32.const 2)
    )
   )
  )
 )
 (func $looped (; has Stack IR ;) (param $0 i32) (result i32)
  (loop $L0
   (if
    (i32.ge_s
     (local.get $0)
     (i32.const 0)
    )
    (block
     (local.set $0
      (i32.sub
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $L0)
    )
   )
  )
  (local.get $0)
 )
 (func $t1 (; has Stack IR ;) (param $0 i32) (result i32)
  (local.set $0
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
  (loop $L0
   (if
    (i32.ge_s
     (local.get $0)
     (i32.const 0)
    )
    (block
     (local.set $0
      (i32.sub
       (local.get $0)
       (i32.const 1)
      )
     )
     (br $L0)
    )
   )
  )
  (local.get $0)
 )
 (func $t2 (; has Stack IR ;) (param $0 i32) (result i32)
  (call $fib
   (local.get $0)
  )
 )
 (func $t3 (; has Stack IR ;) (param $0 i32) (result i32)
  (call $fib
   (i32.add
    (local.get $0)
    (i32.const 1)
   )
  )
 )
)
